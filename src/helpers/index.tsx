import { Typography } from "@mui/material";
import { IChatMessage } from "../ClientData";

export function createTitle (source: string): string {
    let title= source === 'ua' ? '–ú–æ–≤–∞-–ü—Ä–æ–º–æ–≤–∞' : source === 'ru' ? 'Govorika' : 'Poland';
    return title;
}


// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –∏–º–µ–Ω–∏ —Ñ–∞–π–ª–∞ –∏–∑ URL
const getFileName = (url: string) => {
  const parts = url.split("/");
  return parts[parts.length - 1]; // –ë–µ—Ä—ë–º –ø–æ—Å–ª–µ–¥–Ω–∏–π —ç–ª–µ–º–µ–Ω—Ç –ø—É—Ç–∏ (—Å–∞–º —Ñ–∞–π–ª)
};

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ —Å—Ç—Ä–æ–∫–∞ URL
const isValidUrl = (url: string): boolean => {
  try {
    new URL(url);
    return true;
  } catch {
    return false;
  }
};

export const renderMessageContent = (message: IChatMessage) => {
  console.info('message', message);
  switch (message.format) {
    case "voice":
    case "audio":
      return (
        <audio controls>
          <source src={message.text} type="audio/mpeg" />
          –ë—Ä–∞—É–∑–µ—Ä –Ω–µ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç –≤–æ—Å–ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏–µ –∞—É–¥–∏–æ.
        </audio>
      );

    case "photo":
    case "image":
      return (
        <img
          src={message.text}
          alt="–ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ"
          style={{ maxWidth: "100%", borderRadius: "8px" }}
        />
      );

    case "video":
      return (
        <video controls style={{ maxWidth: "100%", borderRadius: "8px" }}>
          <source src={message.text} type="video/mp4" />
          –í–∞—à –±—Ä–∞—É–∑–µ—Ä –Ω–µ –ø—ñ–¥—Ç—Ä–∏–º—É—î –≤—ñ–¥—Ç–≤–æ—Ä–µ–Ω–Ω—è –≤—ñ–¥–µ–æ.
        </video>
      );

    case "video_note":
    case "vide_note": // –í–∞—Ä–∏–∞–Ω—Ç –∫—Ä—É–∂–∫–∞, –∫–∞–∫ –≤ Telegram
      return (
        <video
          controls
          style={{
            width: "200px",
            height: "200px",
            borderRadius: "50%",
            objectFit: "cover",
          }}
        >
          <source src={message.text} type="video/mp4" />
          –í–∞—à –±—Ä–∞—É–∑–µ—Ä –Ω–µ –ø—ñ–¥—Ç—Ä–∏–º—É—î –≤—ñ–¥—Ç–≤–æ—Ä–µ–Ω–Ω—è –≤—ñ–¥–µ–æ.
        </video>
      );

    case "document":
    case "file": {
      const fileName = getFileName(message.text); // –ü–æ–ª—É—á–∞–µ–º –∏–º—è —Ñ–∞–π–ª–∞
      return (
        <a
          href={message.text}
          target="_blank"
          rel="noopener noreferrer"
          style={{ color: "#007bff", textDecoration: "none" }}
        >
          üìÑ {fileName} (–ó–∞–≤–∞–Ω—Ç–∞–∂–∏—Ç–∏)
        </a>
      );
    }

    default:
      // –ï—Å–ª–∏ —Ç–∏–ø –Ω–µ –æ–ø—Ä–µ–¥–µ–ª—ë–Ω, –Ω–æ —Ç–µ–∫—Å—Ç —è–≤–ª—è–µ—Ç—Å—è –≤–∞–ª–∏–¥–Ω—ã–º URL,
      // –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –µ–≥–æ –∫–∞–∫ —Å—Å—ã–ª–∫—É –¥–ª—è —Å–∫–∞—á–∏–≤–∞–Ω–∏—è —Ñ–∞–π–ª–∞.
      if (isValidUrl(message.text)) {
        const fileName = getFileName(message.text);
        return (
          <a
            href={message.text}
            target="_blank"
            rel="noopener noreferrer"
            style={{ color: "white", textDecoration: "none" }}
          >
            üìÑ {fileName} (–ó–∞–≤–∞–Ω—Ç–∞–∂–∏—Ç–∏)
          </a>
        );
      }
      return (
        <Typography
          sx={{
            wordBreak: "break-word",
            whiteSpace: "pre-wrap",
            overflowWrap: "break-word",
          }}
        >
          {message.text}
        </Typography>
      );
  }
};



// export const renderMessageContent = (message: IChatMessage) => {
//     switch (message.format) {
//       case 'voice':
//   return (
//     <audio controls>
//       <source src={message.text} type="audio/ogg" />
//       <source src={message.text} type="audio/mpeg" />
//       –ë—Ä–∞—É–∑–µ—Ä –Ω–µ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç –≤–æ—Å–ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏–µ –∞—É–¥–∏–æ.
//     </audio>
//   );
//       case 'audio':
//         return (
//           <audio controls>
//             <source src={message.text} type="audio/mpeg" />
//             –ë—Ä–∞—É–∑–µ—Ä –Ω–µ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç –≤–æ—Å–ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏–µ –∞—É–¥–∏–æ.
//           </audio>
//         );
  
//       case 'photo':
//         return <img src={message.text} alt="Photo" style={{ maxWidth: '100%', borderRadius: '8px' }} />;
      
//       case 'image':
//         return <img src={message.text} alt="Photo" style={{ maxWidth: '100%', borderRadius: '8px' }} />;
  
//       case 'document':
//         return (
//           <a href={message.text} target="_blank" rel="noopener noreferrer" style={{ color: '#007bff' }}>
//             üìÑ –ó–∞–≤–∞–Ω—Ç–∞–∂–∏—Ç–∏ —Ñ–∞–π–ª 
//           </a>
//         );
//       case 'file':
//        return (
//           <a href={message.text} target="_blank" rel="noopener noreferrer" style={{ color: '#007bff' }}>
//             üìÑ –ó–∞–≤–∞–Ω—Ç–∞–∂–∏—Ç–∏ —Ñ–∞–π–ª 
//           </a>
//         );
  
//       case 'video':
//         return (
//           <video controls style={{ maxWidth: '100%', borderRadius: '8px' }}>
//             <source src={message.text} type="video/mp4" />
//             –í–∞—à –±—Ä–∞—É–∑–µ—Ä –Ω–µ –ø—ñ–¥—Ç—Ä–∏–º—É—î –≤—ñ–¥—Ç–≤–æ—Ä–µ–Ω–Ω—è –≤—ñ–¥–µ–æ.
//           </video>
//         );
  
//       case 'video_note':
//       case 'vide_note': // –í–∞—Ä–∏–∞–Ω—Ç –∫—Ä—É–∂–∫–∞, –∫–∞–∫ –≤ Telegram
//         return (
//           <video
//             controls
//             style={{
//               width: '200px',
//               height: '200px',
//               borderRadius: '50%',
//               objectFit: 'cover',
//             }}
//           >
//             <source src={message.text} type="video/mp4" />
//             –í–∞—à –±—Ä–∞—É–∑–µ—Ä –Ω–µ –ø—ñ–¥—Ç—Ä–∏–º—É—î –≤—ñ–¥—Ç–≤–æ—Ä–µ–Ω–Ω—è –≤—ñ–¥–µ–æ.
//           </video>
//         );
  
//         default:
//           return (
//             <Typography 
//               sx={{ 
//                 wordBreak: 'break-word',  // –†–∞–∑–±–∏–≤–∞–µ—Ç –¥–ª–∏–Ω–Ω—ã–µ —Å–ª–æ–≤–∞
//                 whiteSpace: 'pre-wrap',   // –°–æ—Ö—Ä–∞–Ω—è–µ—Ç –ø–µ—Ä–µ–Ω–æ—Å—ã —Å—Ç—Ä–æ–∫
//                 overflowWrap: 'break-word' // –ü–µ—Ä–µ–Ω–æ—Å –¥–ª–∏–Ω–Ω–æ–≥–æ —Ç–µ–∫—Å—Ç–∞
//               }}
//             >
//               {message.text}
//             </Typography>
//           );
        
//     }
//   };